#!/bin/bash
set -e
set -x

exec 2>&1

function export_daemon_opts() {
    export SPARK_DAEMON_JAVA_OPTS=""
    if [ "${DCOS_SERVICE_NAME}" != "spark" ]; then
        export SPARK_DAEMON_JAVA_OPTS="$SPARK_DAEMON_JAVA_OPTS -Dspark.deploy.zookeeper.dir=/spark_mesos_dispatcher_${DCOS_SERVICE_NAME}"
    fi

    if [ "$SPARK_DISPATCHER_MESOS_ROLE" != "" ]; then
        export SPARK_DAEMON_JAVA_OPTS="$SPARK_DAEMON_JAVA_OPTS -Dspark.mesos.role=$SPARK_DISPATCHER_MESOS_ROLE"
    fi

    if [ "$SPARK_DISPATCHER_MESOS_PRINCIPAL" != "" ]; then
        export SPARK_DAEMON_JAVA_OPTS="$SPARK_DAEMON_JAVA_OPTS -Dspark.mesos.principal=$SPARK_DISPATCHER_MESOS_PRINCIPAL"
    fi

    if [ "$SPARK_DISPATCHER_MESOS_SECRET" != "" ]; then
        export SPARK_DAEMON_JAVA_OPTS="$SPARK_DAEMON_JAVA_OPTS -Dspark.mesos.secret=$SPARK_DISPATCHER_MESOS_SECRET"
    fi
}

function set_log_level() {
    sed "s,<LOG_LEVEL>,${SPARK_LOG_LEVEL}," \
        /opt/spark/dist/conf/log4j.properties.template >/opt/spark/dist/conf/log4j.properties
}

function add_if_non_empty() {
	if [ -n "$2" ]; then
		echo "$1=$2" >> /opt/spark/dist/conf/mesos-cluster-dispatcher.properties
	fi
}

function configure_properties() {

    echo '' > /opt/spark/dist/conf/mesos-cluster-dispatcher.properties
    if [ "${SPARK_DYNAMIC_AUTHENTICATION_PATH}" != "" ]; then
    echo "spark.mesos.secret.dispatcher.dynamic.authentication.path=${SPARK_DYNAMIC_AUTHENTICATION_PATH}" >> /opt/spark/dist/conf/mesos-cluster-dispatcher.properties
    fi
    # write defaults
    if [ "${DCOS_SERVICE_ACCOUNT_CREDENTIAL}" != "" ]; then
        # write defaults using both property names, since 2.0 uses one and 2.1 uses the other
        echo "spark.mesos.dispatcher.driverDefault.spark.mesos.driverEnv.MESOS_MODULES=file:///opt/mesosphere/etc/mesos-scheduler-modules/dcos_authenticatee_module.json" >> /opt/spark/dist/conf/mesos-cluster-dispatcher.properties
        echo "spark.mesos.cluster.taskProperty.spark.mesos.driverEnv.MESOS_MODULES=file:///opt/mesosphere/etc/mesos-scheduler-modules/dcos_authenticatee_module.json" >> /opt/spark/dist/conf/mesos-cluster-dispatcher.properties

        echo "spark.mesos.dispatcher.driverDefault.spark.mesos.driverEnv.MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee" >> /opt/spark/dist/conf/mesos-cluster-dispatcher.properties
        echo "spark.mesos.cluster.taskProperty.spark.mesos.driverEnv.MESOS_AUTHENTICATEE=com_mesosphere_dcos_ClassicRPCAuthenticatee" >> /opt/spark/dist/conf/mesos-cluster-dispatcher.properties

        echo "spark.mesos.dispatcher.driverDefault.spark.mesos.principal=${SPARK_DISPATCHER_MESOS_PRINCIPAL}" >> /opt/spark/dist/conf/mesos-cluster-dispatcher.properties
        echo "spark.mesos.cluster.taskProperty.spark.mesos.principal=${SPARK_DISPATCHER_MESOS_PRINCIPAL}" >> /opt/spark/dist/conf/mesos-cluster-dispatcher.properties
    fi
}


export APPLICATION_WEB_PROXY_BASE="${DISPATCHER_UI_WEB_PROXY_BASE}"
set_log_level
export_daemon_opts
configure_properties
ZK="master.mesos:2181"

if [ "${SPARK_VIRTUAL_USER_NETWORK}" != "" ]; then
   HOST="$(hostname --all-ip-addresses|xargs)"
   echo "Virutal network detected changed LIBPROCESS_IP $LIBPROCESS_IP to $HOST"
   export LIBPROCESS_IP=$HOST
fi

exec /opt/spark/dist/bin/spark-class \
    org.apache.spark.deploy.mesos.MesosClusterDispatcher \
    --port "${DISPATCHER_PORT}" \
    --webui-port "${DISPATCHER_UI_PORT}" \
    --master "mesos://zk://${ZK}/mesos" \
    --zk "${ZK}" \
    --host "${HOST}" \
    --name "${DCOS_SERVICE_NAME}" \
    --properties-file "/opt/spark/dist/conf/mesos-cluster-dispatcher.properties"

